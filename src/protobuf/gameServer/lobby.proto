syntax = "proto3";

package lobby;

import "data.proto";

// 대기실 생성 요청
message C2SCreateRoomReq {
    bool isPrivate = 1; // 비공개 방 여부 (true일때 private)
}
  
// 대기실 생성 결과
message S2CCreateRoomRes {
    string gameCode = 1; // 방 코드
    string gameUrl = 2; // 게임 서버 URL (API GATEWAY 쓴다고 함)
}
  
// 대기실 매칭 취소
message C2SMatchCancelReq {
}

// 대기실 매칭 취소 응답
message S2CMatchCancelRes {
}

// 대기실 매칭 요청 (anyway public 방만)
message C2SMatchReq {
}

// 대기실 매칭 응답
message S2CMatchRes {
  uint32 joinRoomResultCode = 1;
  string gameUrl =2;
}

// 대기실 매칭 진행상황 (주기적으로 알려줘야함)
message S2CMatchProgressNoti {
  uint32 matchProgressCode = 1;
  uint64 elapsedTime = 2;
  string gameUrl = 3; // 매칭이 완료되면 gameUrl을 넣어줘야함.
}

// 대기실 입장 요청 (private 일때 만)
message C2SJoinRoomReq {
  string gameCode = 1; // null 불가능
}

message S2CJoinRoomRes {
  uint32 joinRoomResultCode = 1;
  string gameUrl =2;
}

// 대기실 나가기 요청
message C2SQuitRoomReq {
}

// 대기실 나가기 알리기
message S2CQuitRoomNoti {
    uint32 playerId = 1;
}

// 팀 변경 요청 (자신이 팀을 직접 변경)
message C2STeamChangeReq {
    uint32 teamIndex = 1; // 팀 변경
}
  
// 팀 변경 결과 (자기 자신에게)
message S2CTeamChangeRes {
    uint32 teamChangeResultCode = 1; // 0이면 성공
}

// 대기실 입장 알리기 (팀 변경 결과에서도 Sync로 보내줌)
message S2CSyncRoomNoti {
  repeated PlayerRoomInfo players = 1;
}

// 게임 시작 요청 (준비 완료)
message C2SGameStartReq {
    bool ready = 1;
}

// 게임 시작 결과 (준비 완료)
message S2CGameStartRes {
  uint32 gameStartResultCode = 1; // 0이면 성공
}

// 로딩 진행도 (해당 게임 세션에 들어와 있는 애들한테 Noti)
message C2SLoadProgressNoti {
  uint32 progress = 1; // 0~100 백분율
}

// 로딩 동기화 알림 (누가 얼마나 진행되고 있는지)
message S2CSyncLoadNoti {
  repeated SyncLoadData syncLoadData = 1;

  message SyncLoadData {
    uint32 playerId = 1;
    uint32 progress = 2;
  }
}